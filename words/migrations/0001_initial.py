# Generated by Django 5.1.6 on 2025-02-18 08:50

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="File",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("format", models.CharField(max_length=10)),
                ("path", models.FileField(upload_to="%Y/%m/%d/")),
                ("active", models.BooleanField(default=True)),
                ("cr_on", models.DateTimeField(auto_now_add=True, null=True)),
                ("up_on", models.DateTimeField(auto_now=True, null=True)),
                (
                    "user_file",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "File",
                "verbose_name_plural": "Files",
            },
        ),
        migrations.CreateModel(
            name="Word",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("active", models.BooleanField(default=True)),
                ("cr_on", models.DateTimeField(auto_now_add=True, null=True)),
                ("up_on", models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                "verbose_name": "Word",
                "verbose_name_plural": "Words",
                "indexes": [models.Index(fields=["name"], name="word_main_index")],
            },
        ),
        migrations.CreateModel(
            name="WordsInFiles",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("count", models.PositiveIntegerField()),
                ("active", models.BooleanField(default=True)),
                ("cr_on", models.DateTimeField(auto_now_add=True, null=True)),
                ("up_on", models.DateTimeField(auto_now=True, null=True)),
                (
                    "file_connection",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="words.file",
                    ),
                ),
                (
                    "word_connection",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="words.word",
                    ),
                ),
            ],
            options={
                "verbose_name": "Word in File",
                "verbose_name_plural": "Words in Files",
            },
        ),
        migrations.AddIndex(
            model_name="file",
            index=models.Index(fields=["name"], name="file_index_by_name"),
        ),
        migrations.AddIndex(
            model_name="file",
            index=models.Index(
                fields=["format", "name"], name="file_index_by_format_and_name"
            ),
        ),
    ]
